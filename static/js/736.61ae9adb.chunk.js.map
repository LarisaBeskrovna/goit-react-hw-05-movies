{"version":3,"file":"static/js/736.61ae9adb.chunk.js","mappings":"8SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAS,mCAAG,WAAMC,GAAN,iFACVF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,4BAA+CH,IADrC,mFAAH,sDAITI,EAAmB,mCAAG,sGACVH,EAAAA,EAAAA,IAAA,uCAA0CD,IADhC,uBACzBK,EADyB,EACzBA,KADyB,kBAE1BA,EAAKC,SAFqB,2CAAH,qDAKnBC,EAAY,mCAAG,WAAMJ,GAAN,iFACbF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,4BAA+CH,IADlC,mFAAH,sDAIZQ,EAAW,mCAAG,WAAML,GAAN,iFACZF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,oBAAuCH,IAD3B,mFAAH,sDAIXS,EAAmB,mCAAG,WAAOC,GAAP,0FAAcC,EAAd,+BAAqB,EAArB,SACpBV,EAAAA,EAAAA,IAAA,gCACcD,EADd,kBAC+BU,EAD/B,iBAC6CC,EAD7C,iBADoB,mFAAH,qD,uFCsBhC,UAxCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQb,GAAYc,EAAAA,EAAAA,MAAZd,QACR,GAA8BS,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXZ,EAAAA,EAAAA,IAAaJ,GACVkB,MAAK,SAAAC,GACJR,EAAWQ,EAAIjB,KAAKC,SACpBa,GAAW,EACZ,IACAI,OAAM,SAAAR,GACLC,EAASD,GACTI,GAAW,EACZ,GACJ,GAAE,CAAChB,IAEAe,GACK,uBAAG,gBAIV,iBAAKM,UAAWC,EAAAA,EAAAA,QAAhB,UACa,OAAVV,IAAkB,uBAAIA,EAAMW,WACrB,OAAPb,QAAO,IAAPA,OAAA,EAAAA,EAASc,QAAS,EACjBd,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADC,KAOZ,uBAAG,4BAIV,C","sources":["Api.js","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b736543dbc75e71c808e6920558bf547';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchCast = async movieId => {\n  return await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n  return data.results;\n};\n\nexport const fetchReviews = async movieId => {\n  return await axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const movieDetail = async movieId => {\n  return await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchOnSearchParams = async (query, page = 1) => {\n  return await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&per_page=20`\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../Api';\nimport css from '../index.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchReviews(movieId)\n      .then(res => {\n        setReviews(res.data.results);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div className={css.reviews}>\n      {error !== null && <p>{error.message}</p>}\n      {reviews?.length > 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>{author}</h3>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>There are no reviews </p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","fetchCast","movieId","fetchTrendingMovies","data","results","fetchReviews","movieDetail","fetchOnSearchParams","query","page","useState","reviews","setReviews","error","setError","useParams","loading","setLoading","useEffect","then","res","catch","className","css","message","length","map","id","author","content"],"sourceRoot":""}