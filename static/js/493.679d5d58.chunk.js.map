{"version":3,"file":"static/js/493.679d5d58.chunk.js","mappings":"8SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAY,SAAAC,GACvB,OAAOF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,4BAA+CH,GACvD,EAEYI,EAAmB,mCAAG,8FACpBH,EAAAA,EAAAA,IAAA,uCAA0CD,IADtB,mFAAH,qDAInBK,EAAe,SAAAF,GAC1B,OAAOF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,4BAA+CH,GACvD,EAEYM,EAAc,SAAAH,GACzB,OAAOF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,oBAAuCH,GAC/C,EAEYO,EAAmB,mCAAG,WAAOC,GAAP,0FAAcC,EAAd,+BAAqB,EAArB,SACpBR,EAAAA,EAAAA,IAAA,gCACcD,EADd,kBAC+BQ,EAD/B,iBAC6CC,EAD7C,iBADoB,mFAAH,qD,gGCgChC,UAhDa,WACX,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,YAA1B,eAAOG,EAAP,KAAcC,EAAd,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAA8BO,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXf,EAAAA,EAAAA,GAAUC,GACPgB,MAAK,SAAAC,GACJR,EAAQQ,EAAIC,KAAKV,MACjBM,GAAW,EACZ,IACAK,OAAM,SAAAT,GACLC,GAAS,GACTG,GAAW,EACZ,GACJ,GAAE,CAACd,KAGF,iBAAKoB,UAAWC,EAAAA,EAAAA,KAAhB,UACGR,GACC,uBAAG,sBAEH,wBACGL,GACCA,EAAKc,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACP,2BACE,gBACEC,IACED,EAAY,0CAC2BA,GACnCE,EAENC,MAAO,IACPC,IAAI,YAEN,uBAAIN,KACJ,yBAAG,cAAYC,OAXRF,EADF,MAiBdb,IAAS,uBAAG,eAGlB,C","sources":["Api.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b736543dbc75e71c808e6920558bf547';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchCast = movieId => {\n  return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchTrendingMovies = async () => {\n  return await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const movieDetail = movieId => {\n  return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchOnSearchParams = async (query, page = 1) => {\n  return await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&per_page=20`\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../Api';\nimport css from '../index.module.css';\nimport defaultImg from '../img/no image available.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState();\n  const [error, setError] = useState();\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchCast(movieId)\n      .then(res => {\n        setCast(res.data.cast);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(true);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <div className={css.cast}>\n      {loading ? (\n        <p>Loading cast....</p>\n      ) : (\n        <ul>\n          {cast &&\n            cast.map(({ id, name, character, profile_path }) => (\n              <li key={id}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                      : defaultImg\n                  }\n                  width={250}\n                  alt=\"poster\"\n                />\n                <p>{name}</p>\n                <p>Character: {character}</p>\n              </li>\n            ))}\n        </ul>\n      )}\n      {error && <p>Error...</p>}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","axios","fetchCast","movieId","fetchTrendingMovies","fetchReviews","movieDetail","fetchOnSearchParams","query","page","useState","cast","setCast","error","setError","useParams","loading","setLoading","useEffect","then","res","data","catch","className","css","map","id","name","character","profile_path","src","defaultImg","width","alt"],"sourceRoot":""}