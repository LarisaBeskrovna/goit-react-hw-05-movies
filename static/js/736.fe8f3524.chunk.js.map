{"version":3,"file":"static/js/736.fe8f3524.chunk.js","mappings":"8SAEMA,EAAU,mCAEhBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAY,SAAAC,GACvB,OAAOF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,4BAA+CH,GACvD,EAEYI,EAAmB,mCAAG,8FACpBH,EAAAA,EAAAA,IAAA,uCAA0CD,IADtB,mFAAH,qDAInBK,EAAe,SAAAF,GAC1B,OAAOF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,4BAA+CH,GACvD,EAEYM,EAAc,SAAAH,GACzB,OAAOF,EAAAA,EAAAA,IAAA,iBAAoBE,EAApB,oBAAuCH,GAC/C,EAEYO,EAAmB,mCAAG,WAAOC,GAAP,0FAAcC,EAAd,+BAAqB,EAArB,SACpBR,EAAAA,EAAAA,IAAA,gCACcD,EADd,kBAC+BQ,EAD/B,iBAC6CC,EAD7C,iBADoB,mFAAH,qD,uFCuBhC,UAxCgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QACR,GAA8BO,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,IACXZ,EAAAA,EAAAA,IAAaF,GACVgB,MAAK,SAAAC,GACJR,EAAWQ,EAAIC,KAAKC,SACpBL,GAAW,EACZ,IACAM,OAAM,SAAAV,GACLC,EAASD,GACTI,GAAW,EACZ,GACJ,GAAE,CAACd,IAEAa,GACK,uBAAG,gBAIV,iBAAKQ,UAAWC,EAAAA,EAAAA,QAAhB,UACa,OAAVZ,IAAkB,uBAAIA,EAAMa,WACrB,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASgB,QAAS,EACjBhB,EAAQiB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADC,KAOZ,uBAAG,4BAIV,C","sources":["Api.jsx","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'b736543dbc75e71c808e6920558bf547';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchCast = movieId => {\n  return axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchTrendingMovies = async () => {\n  return await axios.get(`/trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieId => {\n  return axios.get(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n\nexport const movieDetail = movieId => {\n  return axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchOnSearchParams = async (query, page = 1) => {\n  return await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&page=${page}&per_page=20`\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../Api';\nimport css from '../index.module.css';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchReviews(movieId)\n      .then(res => {\n        setReviews(res.data.results);\n        setLoading(false);\n      })\n      .catch(error => {\n        setError(error);\n        setLoading(false);\n      });\n  }, [movieId]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  return (\n    <div className={css.reviews}>\n      {error !== null && <p>{error.message}</p>}\n      {reviews?.length > 0 ? (\n        reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h5>{author}</h5>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>There are no reviews </p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","fetchCast","movieId","fetchTrendingMovies","fetchReviews","movieDetail","fetchOnSearchParams","query","page","useState","reviews","setReviews","error","setError","useParams","loading","setLoading","useEffect","then","res","data","results","catch","className","css","message","length","map","id","author","content"],"sourceRoot":""}